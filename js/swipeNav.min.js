/**
 SwipeNav  1.0

 MIT License
 Copyright (c) 2014 Patrick Stillhart

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.
 **/
/* -- Setup -- */
var enableDesktop = false; // Enables this also for desktop browser
var navigation = '#navBar'; // Id from nav container
var drawerIcon = '#drawer'; // Id from drawericon (to pull out the drawer)(optional)
var width = 295; // Width of nav container
var threshold = 170; // At which point should open
var maxDrawerScreenSize = 1000; // At which point should open
/* -- End Setup -- */
function checkSize(){var e=$(window).width();if(maxDrawerScreenSize>=e)initSwipeNav();else destroySwipeNav()}function initSwipeNav(){$(navigation).css("marginLeft","-"+width+"px");window.addEventListener("touchstart",onTouchStart);window.addEventListener("touchmove",onTouchMove);window.addEventListener("touchend",onTouchEnd);window.addEventListener("mousedown",onTouchStart);window.addEventListener("mousemove",onTouchMove);window.addEventListener("mouseup",onTouchEnd);$(drawerIcon).bind("click",switchDrawerState)}function destroySwipeNav(){$(navigation).css("marginLeft","0");$(navigation).css("left","0");window.removeEventListener("touchstart",onTouchStart);window.removeEventListener("touchmove",onTouchMove);window.removeEventListener("touchend",onTouchEnd);window.removeEventListener("mousedown",onTouchStart);window.removeEventListener("mousemove",onTouchMove);window.removeEventListener("mouseup",onTouchEnd);$(drawerIcon).unbind("click",switchDrawerState)}function onTouchStart(e){startX=getX();startY=getY();fingerDown=true;tempState=isOpen}function onTouchMove(e){if(fingerDown){moved=true;var t=Math.abs(getX()-startX);var n=Math.abs(getY()-startY);if(t<width&&t>15&&t>n+80){if(getX()-startX>0){$(navigation).css("left",t+"px");window.getSelection().removeAllRanges();e.preventDefault()}else if(isOpen){$(navigation).css("left",width-startX+getX()+"px");window.getSelection().removeAllRanges();e.preventDefault()}}}}function onTouchEnd(){if(moved&&getX()-startX>threshold){open();if(tempState!=isOpen)window.getSelection().removeAllRanges()}else if(moved){close();if(tempState!=isOpen)window.getSelection().removeAllRanges()}moved=fingerDown=false}function switchDrawerState(){if(isOpen)close();else open()}function close(){isOpen=false;$(navigation).animate({left:"0"})}function open(){isOpen=true;$(navigation).animate({left:width+"px"})}function getX(){return event.pageX||event.changedTouches[0].pageX}function getY(){return event.pageY||event.changedTouches[0].pageY}window.onload=function(e){if(!enableDesktop){if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){onMobile=true;console.log(true)}}else{onMobile=true;console.log(true)}if(onMobile)checkSize()};window.onresize=function(e){if(onMobile)checkSize()};var startX,startY;var fingerDown,moved,isOpen,tempState,onMobile